<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Network debugging with eBPF (RHEL 8 Beta)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zVrDKKgnO3I/" /><category term="C" scheme="searchisko:content:tags" /><category term="Clang/LLVM" scheme="searchisko:content:tags" /><category term="eBPF" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="network troubleshooting" scheme="searchisko:content:tags" /><category term="Networking" scheme="searchisko:content:tags" /><category term="Open vSwitch" scheme="searchisko:content:tags" /><category term="OVS" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><category term="virtual networking" scheme="searchisko:content:tags" /><author><name>Matteo Croce</name></author><id>searchisko:content:id:jbossorg_blog-network_debugging_with_ebpf_rhel_8_beta</id><updated>2018-12-03T12:00:45Z</updated><published>2018-12-03T12:00:45Z</published><content type="html">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt; &lt;p&gt;Networks are fun to work with, but often they are also a source of trouble. Network troubleshooting can be difficult, and reproducing the bad behavior that is happening in the field can be painful as well.&lt;/p&gt; &lt;p&gt;Luckily, there are some tools that come to the aid: network namespaces, virtual machines, &lt;code&gt;tc&lt;/code&gt;, and &lt;code&gt;netfilter&lt;/code&gt;. Simple network setups can be reproduced with network namespaces and &lt;code&gt;veth&lt;/code&gt; devices, while more-complex setups require interconnecting virtual machines with a software bridge and using standard networking tools, like &lt;code&gt;iptables&lt;/code&gt; or &lt;code&gt;tc&lt;/code&gt;, to simulate the bad behavior. If you have an issue with ICMP replies generated because an SSH server is down, &lt;code&gt;iptables -A INPUT -p tcp --dport 22 -j REJECT --reject-with icmp-host-unreachable&lt;/code&gt; in the correct namespace or VM can do the trick.&lt;/p&gt; &lt;p&gt;This article describes using &lt;a href="https://lwn.net/Articles/740157/"&gt;eBPF (extended BPF)&lt;/a&gt;, an extended version of the Berkeley Packet Filter, to troubleshoot complex network issues. eBPF is a fairly new technology and the project is still in an early stage, with documentation and the SDK not yet ready. But that should improve, especially with XDP (eXpress Data Path) being shipped in &lt;a href="https://developers.redhat.com/blog/2018/11/15/red-hat-enterprise-linux-8-beta-is-here/"&gt;Red Hat Enterprise Linux 8 Beta&lt;/a&gt;, which you can download and run now.&lt;span id="more-538817"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;While eBPF is not a silver bullet, I think it is a very powerful tool for network debugging and it deserves attention. I am sure it will play a really important role in the future of networks.&lt;/p&gt; &lt;h2 id="the-problem"&gt;The problem&lt;/h2&gt; &lt;p&gt;I was debugging an &lt;a href="https://developers.redhat.com/blog/tag/open-virtual-network/"&gt;Open vSwitch&lt;/a&gt; (OVS) network issue affecting a very complex installation: some TCP packets were scrambled and delivered out of order, and the throughput between VMs was dropping from a sustained 6 Gb/s to an oscillating 2–4 Gb/s. After some analysis, it turned out that the first TCP packet of every connection with the PSH flag set was sent out of order: only the first one, and only one per connection.&lt;/p&gt; &lt;p&gt;I tried to replicate the setup with two VMs, and after many man pages and internet searches, I discovered that both &lt;code&gt;iptables&lt;/code&gt; and &lt;code&gt;nftables&lt;/code&gt; can&amp;#8217;t mangle TCP flags, while &lt;code&gt;tc&lt;/code&gt; could, but it can only overwrite the flags, breaking new connections and TCP in general.&lt;/p&gt; &lt;p&gt;Probably I could have dealt with it using a combination of &lt;code&gt;iptables&lt;/code&gt; mark, &lt;code&gt;conntrack&lt;/code&gt;, and &lt;code&gt;tc&lt;/code&gt;, but then I thought: this could be a job for eBPF.&lt;/p&gt; &lt;h2 id="what-is-ebpf"&gt;What is eBPF?&lt;/h2&gt; &lt;p&gt;eBPF is an extended version of the Berkeley Packet Filter. It adds many improvements to BPF; most notably, it allows writing memory instead of just reading it, so it can also edit packets in addition to filtering them.&lt;/p&gt; &lt;p&gt;eBPF is often referred to as BPF, while BPF is referred to as cBPF (classic BPF), so the word &lt;em&gt;BPF&lt;/em&gt; can be used to represent both, depending on the context: here, I&amp;#8217;m always referring to the extended version.&lt;/p&gt; &lt;p&gt;Under the hood, eBPF uses a very simple bytecode VM that can execute small portions of bytecode and edit some in-memory buffers. eBPF comes with some limitations, to prevent it from being used maliciously:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Cycles are forbidden, so the program will exit in a definite time.&lt;/li&gt; &lt;li&gt;It can&amp;#8217;t access memory other than the stack and a scratch buffer.&lt;/li&gt; &lt;li&gt;Only kernel functions in a whitelist can be called.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The loaded program can be loaded in the kernel in many ways, doing a &lt;a href="http://www.brendangregg.com/ebpf.html"&gt;plethora of debugging and tracing&lt;/a&gt;. In this case, we are interested in how eBPF works with the networking subsystem. There are two ways to use an eBPF program:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Attached via XDP to the very early RX path of a physical or virtual NIC&lt;/li&gt; &lt;li&gt;Attached via &lt;code&gt;tc&lt;/code&gt; to a qdisc just like a normal action, in ingress or egress&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In order to create an eBPF program to attach, it is enough to write some C code and convert it into bytecode. Below a simple example using XDP:&lt;/p&gt; &lt;pre&gt;SEC("prog") int xdp_main(struct xdp_md *ctx) { void *data_end = (void *)(uintptr_t)ctx-&amp;#62;data_end; void *data = (void *)(uintptr_t)ctx-&amp;#62;data; struct ethhdr *eth = data; struct iphdr *iph = (struct iphdr *)(eth + 1); struct icmphdr *icmph = (struct icmphdr *)(iph + 1); /* sanity check needed by the eBPF verifier */ if (icmph + 1 &amp;#62; data_end) return XDP_PASS; /* matched a pong packet */ if (eth-&amp;#62;h_proto != ntohs(ETH_P_IP) || iph-&amp;#62;protocol != IPPROTO_ICMP || icmph-&amp;#62;type != ICMP_ECHOREPLY) return XDP_PASS; if (iph-&amp;#62;ttl) { /* save the old TTL to recalculate the checksum */ uint16_t *ttlproto = (uint16_t *)&amp;#38;iph-&amp;#62;ttl; uint16_t old_ttlproto = *ttlproto; /* set the TTL to a pseudorandom number 1 &amp;#60; x &amp;#60; TTL */ iph-&amp;#62;ttl = bpf_get_prandom_u32() % iph-&amp;#62;ttl + 1; /* recalculate the checksum; otherwise, the IP stack will drop it */ csum_replace2(&amp;#38;iph-&amp;#62;check, old_ttlproto, *ttlproto); } return XDP_PASS; } char _license[] SEC("license") = "GPL";&lt;/pre&gt; &lt;p&gt;The snippet above, stripped of &lt;code&gt;include&lt;/code&gt; statements, helpers, and all the not-necessary code, is an XDP program that changes the TTL of received ICMP echo replies, namely pongs, to a random number. The main function receives a &lt;code&gt;struct xdp_md&lt;/code&gt;, which contains two pointers to the packet start and end.&lt;/p&gt; &lt;p&gt;To compile our code into eBPF bytecode, a compiler with support for it is needed. Clang supports it and produces eBPF bytecode by specifying &lt;code&gt;bpf&lt;/code&gt; as the target at compile time:&lt;/p&gt; &lt;pre&gt;$ clang -O2 -target bpf -c xdp_manglepong.c -o xdp_manglepong.o&lt;/pre&gt; &lt;p&gt;The command above produces a file that seems to be a regular object file, but if inspected, you&amp;#8217;ll see that the reported machine type will be &lt;code&gt;Linux eBPF&lt;/code&gt; rather than the native one of the OS:&lt;/p&gt; &lt;pre&gt;$ readelf -h xdp_manglepong.o ELF Header: Magic: 7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 Class: ELF64 Data: 2's complement, little endian Version: 1 (current) OS/ABI: UNIX - System V ABI Version: 0 Type: REL (Relocatable file) Machine: Linux BPF &amp;#60;--- HERE [...]&lt;/pre&gt; &lt;p&gt;Once wrapped in a regular object file, the eBPF program is ready to be loaded and attached to the device via XDP. This can be done using &lt;code&gt;ip&lt;/code&gt;, from the &lt;code&gt;iproute2&lt;/code&gt; suite, using the following syntax:&lt;/p&gt; &lt;pre&gt;# ip -force link set dev wlan0 xdp object xdp_manglepong.o verbose&lt;/pre&gt; &lt;p&gt;This command specified the target interface &lt;code&gt;wlan0&lt;/code&gt;, and with the &lt;code&gt;-force&lt;/code&gt; option, it will overwrite any existing eBPF code already loaded. After loading the eBPF bytecode, this is the system behavior:&lt;/p&gt; &lt;pre&gt;$ ping -c10 192.168.85.1 PING 192.168.85.1 (192.168.85.1) 56(84) bytes of data. 64 bytes from 192.168.85.1: icmp_seq=1 ttl=41 time=0.929 ms 64 bytes from 192.168.85.1: icmp_seq=2 ttl=7 time=0.954 ms 64 bytes from 192.168.85.1: icmp_seq=3 ttl=17 time=0.944 ms 64 bytes from 192.168.85.1: icmp_seq=4 ttl=64 time=0.948 ms 64 bytes from 192.168.85.1: icmp_seq=5 ttl=9 time=0.803 ms 64 bytes from 192.168.85.1: icmp_seq=6 ttl=22 time=0.780 ms 64 bytes from 192.168.85.1: icmp_seq=7 ttl=32 time=0.847 ms 64 bytes from 192.168.85.1: icmp_seq=8 ttl=50 time=0.750 ms 64 bytes from 192.168.85.1: icmp_seq=9 ttl=24 time=0.744 ms 64 bytes from 192.168.85.1: icmp_seq=10 ttl=42 time=0.791 ms --- 192.168.85.1 ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 125ms rtt min/avg/max/mdev = 0.744/0.849/0.954/0.082 ms&lt;/pre&gt; &lt;p&gt;Every packet received goes through eBPF, which eventually does some transformation and decides to drop or let the packet pass.&lt;/p&gt; &lt;h2 id="how-ebpf-come-to-help"&gt;How eBPF can help&lt;/h2&gt; &lt;p&gt;Going back to the original network issue, I needed to mangle some TCP flags, only one per connection, and neither &lt;code&gt;iptables&lt;/code&gt; nor &lt;code&gt;tc&lt;/code&gt; allow doing that. Writing C code for this scenario would be very easy: set up two VMs linked by an OVS bridge and simply attach eBPF to one of the two VM virtual devices.&lt;/p&gt; &lt;p&gt;This looks like a nice solution, but you must take into account that XDP only supports handling of received packets, and attaching eBPF in the &lt;code&gt;rx&lt;/code&gt; path of the receiving VM will have no effect on the switch.&lt;/p&gt; &lt;p&gt;To properly address this, eBPF has to be loaded using &lt;code&gt;tc&lt;/code&gt; and attached in the egress path within the VM, as &lt;code&gt;tc&lt;/code&gt; can load and attach eBPF programs to a qdisc just like any other action. In order to mangle packets leaving the host, an egress qdisc is needed to attach eBPF to.&lt;/p&gt; &lt;p&gt;There are small differences between the &lt;code&gt;XDP&lt;/code&gt; and &lt;code&gt;tc&lt;/code&gt; API when loading an eBPF program: the default section name differs, the argument of the main function has a different structure type, and the returned values are different, but this is not a big issue. Below is a snippet of a program that does TCP mangling when attached to a &lt;code&gt;tc&lt;/code&gt; action:&lt;/p&gt; &lt;pre&gt;#define RATIO 10 SEC("action") int bpf_main(struct __sk_buff *skb) { void *data = (void *)(uintptr_t)skb-&amp;#62;data; void *data_end = (void *)(uintptr_t)skb-&amp;#62;data_end; struct ethhdr *eth = data; struct iphdr *iph = (struct iphdr *)(eth + 1); struct tcphdr *tcphdr = (struct tcphdr *)(iph + 1); /* sanity check needed by the eBPF verifier */ if ((void *)(tcphdr + 1) &amp;#62; data_end) return TC_ACT_OK; /* skip non-TCP packets */ if (eth-&amp;#62;h_proto != __constant_htons(ETH_P_IP) || iph-&amp;#62;protocol != IPPROTO_TCP) return TC_ACT_OK; /* incompatible flags, or PSH already set */ if (tcphdr-&amp;#62;syn || tcphdr-&amp;#62;fin || tcphdr-&amp;#62;rst || tcphdr-&amp;#62;psh) return TC_ACT_OK; if (bpf_get_prandom_u32() % RATIO == 0) tcphdr-&amp;#62;psh = 1; return TC_ACT_OK; } char _license[] SEC("license") = "GPL";&lt;/pre&gt; &lt;p&gt;The compilation into bytecode is done as in the XDP example before via the following:&lt;/p&gt; &lt;pre&gt;clang -O2 -target bpf -c tcp_psh.c -o tcp_psh.o&lt;/pre&gt; &lt;p&gt;But the loading is different:&lt;/p&gt; &lt;pre&gt;# tc qdisc add dev eth0 clsact # tc filter add dev eth0 egress matchall action bpf object-file tcp_psh.o&lt;/pre&gt; &lt;p&gt;At this point, eBPF is loaded in the right place and packets leaving the VM are mangled. By checking the received packets from the second VM, you can see the following:&lt;/p&gt; &lt;pre&gt;# tcpdump -tnni eth0 -Q in [1579537.890082] device eth0 entered promiscuous mode tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 809667041:809681521, ack 3046223642, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 14480:43440, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 43440:101360, ack 1, length 57920 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 101360:131072, ack 1, length 29712 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 131072:145552, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 145552:174512, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 174512:210712, ack 1, length 36200 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 210712:232432, ack 1, length 21720 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 232432:246912, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 246912:262144, ack 1, length 15232 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 262144:276624, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 276624:305584, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 305584:363504, ack 1, length 57920 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 363504:393216, ack 1, length 29712 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 393216:407696, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 407696:436656, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 436656:494576, ack 1, length 57920 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 494576:524288, ack 1, length 29712 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 524288:538768, ack 1, length 14480 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 538768:567728, ack 1, length 28960 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 567728:625648, ack 1, length 57920 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [.], seq 625648:627096, ack 1, length 1448 IP 192.168.123.1.39252 &amp;#62; 192.168.123.2.5201: Flags [P.], seq 627096:655360, ack 1, length 28264&lt;/pre&gt; &lt;p&gt;&lt;code&gt;tcpdump&lt;/code&gt; confirms that the new eBPF code is working, and about 1 of every 10 TCP packets has the PSH flag set. With just 20 lines of C code, we selectively mangled the TCP packets leaving a VM, replicating an error that happened in the field, all without recompiling any driver and without even rebooting! This simplified a lot the validation of the &lt;a href="https://github.com/openvswitch/ovs/commit/9b4f08cdcaf253175edda088683bdd3db9e4c097"&gt;Open vSwitch fix&lt;/a&gt; in a manner that was impossible to do with other tools.&lt;/p&gt; &lt;h2 id="conclusions"&gt;Conclusion&lt;/h2&gt; &lt;p&gt;eBPF is a fairly new technology, and the community has strong opinions about its adoption. It&amp;#8217;s also worth noting that eBPF-based projects like &lt;a href="https://lwn.net/Articles/747551/"&gt;bpfilter&lt;/a&gt; are becoming more popular, and as consequence, various hardware vendors are starting to implement eBPF support directly in their NICs.&lt;/p&gt; &lt;p&gt;While eBPF is not a silver bullet and should not be abused, I think it is a very powerful tool for network debugging and it deserves attention. I am sure it will play a really important role in the future of networks.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Download &lt;/em&gt;&lt;/strong&gt;&lt;em&gt;&lt;strong&gt;&lt;a href="https://developers.redhat.com/rhel8/"&gt;Red Hat Enterprise Linux 8 Beta&lt;/a&gt;&lt;/strong&gt; &lt;strong&gt;and try eBPF.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;h2&gt;Additional Resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/tag/open-vswitch/"&gt;Articles on Open vSwitch&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/tag/ovn/"&gt;Articles on Open Virtual Network&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2017/12/13/introducing-stapbpf-systemtaps-new-bpf-backend/" rel="bookmark"&gt;Introducing stapbpf – SystemTap’s new BPF backend&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#38;linkname=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F12%2F03%2Fnetwork-debugging-with-ebpf%2F&amp;#038;title=Network%20debugging%20with%20eBPF%20%28RHEL%208%20Beta%29" data-a2a-url="https://developers.redhat.com/blog/2018/12/03/network-debugging-with-ebpf/" data-a2a-title="Network debugging with eBPF (RHEL 8 Beta)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/12/03/network-debugging-with-ebpf/"&gt;Network debugging with eBPF (RHEL 8 Beta)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zVrDKKgnO3I" height="1" width="1" alt=""/&gt;</content><summary>Introduction Networks are fun to work with, but often they are also a source of trouble. Network troubleshooting can be difficult, and reproducing the bad behavior that is happening in the field can be painful as well. Luckily, there are some tools that come to the aid: network namespaces, virtual machines, tc, and netfilter. Simple network setups can be reproduced with network namespaces and veth...</summary><dc:creator>Matteo Croce</dc:creator><dc:date>2018-12-03T12:00:45Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/12/03/network-debugging-with-ebpf/</feedburner:origLink></entry><entry><title>Common architectural elements for modern integration architectures</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/G5w6pwk9k60/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="Architecture" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Customer Experience" scheme="searchisko:content:tags" /><category term="developers" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Red Hat Customers" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-common_architectural_elements_for_modern_integration_architectures</id><updated>2018-11-30T12:00:51Z</updated><published>2018-11-30T12:00:51Z</published><content type="html">&lt;p&gt;In &lt;a href="https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/"&gt;Part 1 of this series&lt;/a&gt;, we explored a use case around integration being the key to transforming your customer experience.&lt;/p&gt; &lt;p&gt;I laid out how I&amp;#8217;ve approached the use case and how I&amp;#8217;ve used successful customer portfolio solutions as the basis for researching a generic architectural blueprint. The only thing left to cover was the order in which you&amp;#8217;ll be led through the blueprint details.&lt;/p&gt; &lt;p&gt;This article, which is Part 2 of the series, starts the real journey at the very top, with a generic architecture from which we&amp;#8217;ll discuss the common architectural elements one by one.&lt;/p&gt; &lt;p&gt;&lt;span id="more-536977"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;From specific to generic&lt;/h2&gt; &lt;p&gt;Before diving into the common elements, it might be good to understand that this is not a catch-all for every possible integration solution. It&amp;#8217;s a collection of identified elements that I&amp;#8217;ve uncovered in multiple customer implementations. The elements presented here are then the &lt;i&gt;generic common architectural elements&lt;/i&gt; that I&amp;#8217;ve identified and collected into the generic architectural blueprint.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s my intent to provide a blueprint that provides guidance and not deep technical details. You&amp;#8217;re smart enough to figure out wiring integration points for your own architectures. You&amp;#8217;re capable of slotting in the technologies and components you&amp;#8217;ve committed to in the past, where applicable. It&amp;#8217;s my job here to describe the architectural blueprint generic components and outline a few specific cases with visual diagrams so that you&amp;#8217;re able to make the right decisions from the start of your integration projects.&lt;/p&gt; &lt;p&gt;Another challenge has been how to visually represent the architectural blueprint. There are many ways to represent each element, but I&amp;#8217;ve chosen some icons, text, and colors that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or &lt;a href="https://www.schabell.org/p/contact.html"&gt;contact me directly&lt;/a&gt; with your feedback.&lt;/p&gt; &lt;p&gt;Now let&amp;#8217;s take a quick tour of the generic architecture and outline the common elements uncovered in my research.&lt;/p&gt; &lt;h2&gt;External applications&lt;/h2&gt; &lt;p&gt;Starting at the top of the diagram, which is by no means a geographical necessity, there are two elements that represent external applications that interact with the architecture. Distilling the various applications discovered in customer solution research, I&amp;#8217;ve come up with two common representations:&lt;/p&gt; &lt;p&gt;&lt;a href="https://1.bp.blogspot.com/-Iziyw9LYfEs/W-yPjBdM3OI/AAAAAAAAtR4/BzwK4cJxq6UbusLUs3DjzzqZcmqhcpbmQCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.02.50.png"&gt;&lt;img class="aligncenter" src="https://1.bp.blogspot.com/-Iziyw9LYfEs/W-yPjBdM3OI/AAAAAAAAtR4/BzwK4cJxq6UbusLUs3DjzzqZcmqhcpbmQCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.02.50.png" alt="Common architectural elements for external application deployments" width="320" height="34" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The first is &lt;i&gt;mobile applications, &lt;/i&gt;covering basically everything that customers use to interact directly with a company. This can be mobile applications deployed by the company itself or developed by third-party organizations to interact with the services offered.&lt;/p&gt; &lt;p&gt;The second is &lt;i&gt;web applications,&lt;/i&gt; a broad element to contain all other types of applications, websites, and/or services that are deployed by the company or any third-party organizations to interact with the services offered.&lt;/p&gt; &lt;h2&gt;API gateway and proxy&lt;/h2&gt; &lt;p&gt;These elements in the common architecture are found in every customer solution researched. They were mentioned by name and consisted of an &lt;i&gt;Application Programming Interface (API) gateway&lt;/i&gt; that managed access from external applications when calling internal customer solution services.&lt;/p&gt; &lt;p&gt;The proxy shown was a &lt;i&gt;reverse proxy&lt;/i&gt;, a standard solution for providing a security layer between external applications calling internal services by hiding the internal addresses.&lt;/p&gt; &lt;p&gt;&lt;a href="https://4.bp.blogspot.com/-FDF3y0ULHPY/W-yT21e0HiI/AAAAAAAAtSI/3Erw7wbcSqc4dae7_r5aQPga_-TwRZB_wCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.29.52.png"&gt;&lt;img class="aligncenter" src="https://4.bp.blogspot.com/-FDF3y0ULHPY/W-yT21e0HiI/AAAAAAAAtSI/3Erw7wbcSqc4dae7_r5aQPga_-TwRZB_wCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.29.52.png" alt="Common architectural elements are API's and proxies" width="320" height="53" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Container platform&lt;/h2&gt; &lt;p&gt;Without a doubt, every organization engaged in omnichannel integrations to improve customer experience has seen the value of &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; and the use of a container platform. The container platform provides for one consistent environment for developers and operations to manage services, applications, integration points, process integration, and security.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a href="https://1.bp.blogspot.com/-bPVroYZKt4o/W-yVdB48QwI/AAAAAAAAtSY/EiH9T_e8wLcF7wnCcQm7tkG1gldhS7GZwCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.31.25.png"&gt;&lt;img class="aligncenter" src="https://1.bp.blogspot.com/-bPVroYZKt4o/W-yVdB48QwI/AAAAAAAAtSY/EiH9T_e8wLcF7wnCcQm7tkG1gldhS7GZwCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.31.25.png" alt="Common architectural element is a container platform" width="320" height="92" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It&amp;#8217;s also the one way to ensure you can uniformly leverage the same container infrastructure across a hybrid multicloud environment. It prevents you from becoming locked into any private or cloud infrastructure because you have an exit strategy with a container platform that&amp;#8217;s consistent across your architecture.&lt;/p&gt; &lt;p&gt;The security aspect is interwoven in the container platform, because each container service, application, or process integration can be plugged into an organization&amp;#8217;s authentication and authorization mechanisms.&lt;/p&gt; &lt;h2&gt;Storage services&lt;/h2&gt; &lt;p&gt;The storage services uncovered in customer solution research were diverse and numerous. For that reason, there is no single common architectural element shown at the highest level. Everything from container native storage to traditional block storage was found.&lt;/p&gt; &lt;p&gt;&lt;a href="https://4.bp.blogspot.com/-MLI9T5RwmPU/W-yWuOYjzDI/AAAAAAAAtSk/uYb7F7PjbT8_64yMPJlapM2kt8yiI7atwCLcBGAs/s1600/Screenshot%2B2018-11-14%2Bat%2B22.39.45.png"&gt;&lt;img class="aligncenter" src="https://4.bp.blogspot.com/-MLI9T5RwmPU/W-yWuOYjzDI/AAAAAAAAtSk/uYb7F7PjbT8_64yMPJlapM2kt8yiI7atwCLcBGAs/s320/Screenshot%2B2018-11-14%2Bat%2B22.39.45.png" alt="Common architectural elements in storage services" width="320" height="108" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In later articles, when more detail is shown, I&amp;#8217;ll make a point to present a few of the options chosen by customers integrating data services with processes and applications.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s next&lt;/h2&gt; &lt;p&gt;This was just a short overview of the common generic elements that make up our architecture blueprint for the ominchannel customer experience use case.&lt;/p&gt; &lt;p&gt;An overview of the series on omnichannel customer experience portfolio architecture blueprint can be found here:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/28/integration-is-key-to-customer-experience/"&gt;Part 1: How integration is key to customer experience&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Common architectural elements for modern integration architectures (this article)&lt;/li&gt; &lt;li&gt;Details of specific elements (external apps, API gateways, container platform storage services)&lt;/li&gt; &lt;li&gt;Application integration details&lt;/li&gt; &lt;li&gt;Dissecting several specific application integration architectures&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Catch up on any articles you missed by following one of the links above.&lt;/p&gt; &lt;p&gt;Next in this series, we&amp;#8217;ll be taking a look at the details of specific elements in an architecture for omnichannel customer experience.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#38;linkname=Common%20architectural%20elements%20for%20modern%20integration%20architectures" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F30%2Fcommon-architectural-elements-for-modern-integration-architectures%2F&amp;#038;title=Common%20architectural%20elements%20for%20modern%20integration%20architectures" data-a2a-url="https://developers.redhat.com/blog/2018/11/30/common-architectural-elements-for-modern-integration-architectures/" data-a2a-title="Common architectural elements for modern integration architectures"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/30/common-architectural-elements-for-modern-integration-architectures/"&gt;Common architectural elements for modern integration architectures&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/G5w6pwk9k60" height="1" width="1" alt=""/&gt;</content><summary>In Part 1 of this series, we explored a use case around integration being the key to transforming your customer experience. I laid out how I’ve approached the use case and how I’ve used successful customer portfolio solutions as the basis for researching a generic architectural blueprint. The only thing left to cover was the order in which you’ll be led through the blueprint details. This article,...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-11-30T12:00:51Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/30/common-architectural-elements-for-modern-integration-architectures/</feedburner:origLink></entry><entry><title>Workbench is now Business Central!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Zq-RIVsdm6o/workbench-is-now-business-central.html" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Mario Fusco</name></author><id>searchisko:content:id:jbossorg_blog-workbench_is_now_business_central</id><updated>2018-11-30T15:08:59Z</updated><published>2018-11-30T11:39:00Z</published><content type="html">&lt;div id="preamble"&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph first-letter-capital"&gt;Article originally posted &lt;a href="http://porcelli.me/rhba/business-central/2018/11/29/business-central-consolidation.html" target="_blank"&gt;here&lt;/a&gt; by Alex Porcelli &lt;br /&gt;&lt;br /&gt;5 years ago, on November 2013 we released &lt;a href="https://search.maven.org/artifact/org.kie/kie-wb/6.0.0.Final/pom" rel="noopener" target="_blank"&gt;6.0.0.Final&lt;/a&gt;, that included the first version of the Workbench. It has been a long journey so far, but today we’re announcing that we’re retiring the Workbench brand and officially adopting Business Central as the new brand!&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2 id="historical-context"&gt;Historical Context&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;The KIE group has been developing web tooling for more than a decade now. The first public release that shipped a browser based tool was &lt;a href="https://search.maven.org/artifact/org.drools/drools-guvnor/5.0.1/war" rel="noopener" target="_blank"&gt;5.0.1&lt;/a&gt; (May of 2009), but its R&amp;amp;D started way before that.&lt;/div&gt;&lt;div class="admonitionblock tip"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="icon"&gt;&lt;div class="title"&gt;Tip&lt;/div&gt;&lt;/td&gt;&lt;td class="content"&gt;KIE stands for &lt;b&gt;Knowledge Is Everything&lt;/b&gt;, and it is pronounced exactly the word &lt;b&gt;key&lt;/b&gt; in English: &lt;i&gt;/kē/&lt;/i&gt; .&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;The first experiments of a web-based tool to manage a central repository for business rules that provided an intuitive user interface to create and package rules started back in &lt;a href="https://github.com/kiegroup/guvnor/commit/141aabe8b3c2629eb3762e966ebc7de6a5d90a94" rel="noopener" target="_blank"&gt;September 2006&lt;/a&gt; as jbrms. After a couple of years, it was renamed to &lt;a href="https://github.com/kiegroup/guvnor/tree/0b8044cd73a61b2fb0283e3ca880d1e38231d126" rel="noopener" target="_blank"&gt;Guvnor&lt;/a&gt;, and this is the name that would become known as the official name of our first web tooling.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="imageblock" id="img-guvnor" style="text-align: center;"&gt;&lt;div class="content"&gt;&lt;img alt="guvnor" src="http://porcelli.me/images/blog/guvnor.png" /&gt;&lt;/div&gt;&lt;div class="title"&gt;Figure 1. Guvnor Guided Rule Editor User Interface.&lt;/div&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;br /&gt;The next generation that became known as Workbench started its R&amp;amp;D in &lt;a href="https://github.com/AppFormer/uberfire/tree/5c9a67e9eb6cce2e27a96d2fa3c272f0fbdbb33c" rel="noopener" target="_blank"&gt;May of 2012&lt;/a&gt; with multiple goals and challenges that could be summarized in the following major two key points:&lt;/div&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;A modular, plug-in based, composable tooling, to avoid the single project/repo that Guvnor became over the years&lt;/li&gt;&lt;li&gt;A Virtual File System based storage, to avoid getting stuck with a technology like &lt;a href="https://www.jcp.org/en/jsr/detail?id=170" rel="noopener" target="_blank"&gt;JCR&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class="imageblock" id="img-workbench" style="text-align: center;"&gt;&lt;div class="content"&gt;&lt;img alt="workbench" src="http://porcelli.me/images/blog/workbench.png" /&gt;&lt;/div&gt;&lt;div class="title"&gt;Figure 2. Workbench Original NSEW Compass Drag-and-Drop&lt;/div&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;&lt;br /&gt;If you’re feeling nostalgic, you can play &lt;a href="https://www.youtube.com/watch?v=ckAznbOOV-4" rel="noopener" target="_blank"&gt;this &lt;/a&gt; video, and get back to May of 2013, a few months before the release. But if you have time, and want to see how our fresh released second generation looked like in practice, you have a full &lt;a href="https://www.youtube.com/playlist?list=PLb9jQNHBKBRj9IJkc_F5nCJAvXaegOGW8" rel="noopener" target="_blank"&gt;playlist&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2 id="evolution"&gt;Evolution&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;The Workbench has been distributed in two flavors: KIE Drools Workbench and KIE Workbench. Initially, the KIE Workbench used to be shipped with an embedded jBPM engine, what made the distributions significantly different. However, with the KIE-Server release and the engine unification, the embedded jBPM engine was removed from Workbench, and the differences between the two distros became just a matter of show/hide some user interface items.&lt;/div&gt;&lt;div class="paragraph"&gt;It’s also clear that the current Workbench has very little in common with its original format. Over the years it not only get more polished and stable, but the target audience has evolved from a developer focused to a collaborative platform between practitioners and developers.&lt;/div&gt;&lt;div class="paragraph"&gt;Based on the above facts and also looking for a more concise branding strategy a decision was made: unify the distributions and re-brand it as &lt;b&gt;Business Central&lt;/b&gt;!&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2 id="business-central"&gt;Business Central&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;So what’s in the new name? The major positive impact is that we have now a single distribution and terminology to reference the KIE group web tooling, that also unifies the product and community terminology.&lt;/div&gt;&lt;div class="paragraph"&gt;Here’s a quick walkthrough of the changes you’ll see in the new Business Central:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="imageblock" id="img-business-central" style="text-align: center;"&gt;&lt;div class="content"&gt;&lt;img alt="business-central" src="http://porcelli.me/images/blog/new-business-central.gif" /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect2"&gt;&lt;h3 id="profiles-and-entitlements"&gt;Profiles and Entitlements&lt;/h3&gt;&lt;div class="paragraph"&gt;By default Business Central bootstrap with all the features enabled, that includes Drools, OptaPlanner, and jBPM. However, for those that are not taking advantage of our jBPM engine, we provide in settings a Profiles option that allows admins to adjust Business Central to display only the relevant profile to your needs.&lt;/div&gt;&lt;div class="paragraph"&gt;The default profile can be also be defined in the startup using the &lt;code&gt;org.kie.workbench.profile&lt;/code&gt; environment variable with the following possible values:&lt;/div&gt;&lt;div class="ulist"&gt;&lt;ul&gt;&lt;li&gt;FULL&lt;/li&gt;&lt;li&gt;PLANNER_AND_RULES&lt;/li&gt;&lt;li&gt;FORCE_FULL&lt;/li&gt;&lt;li&gt;FORCE_PLANNER_AND_RULES&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div class="paragraph"&gt;The main difference between the "FORCE_" values is that it will hide the settings configuration, forcing the chosen profile.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="sect1"&gt;&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;&lt;div class="sectionbody"&gt;&lt;div class="paragraph"&gt;After five years, the KIE group has decided that was time to retire the Workbench brand. Our web tooling evolved quite a lot and the use of the word Workbench, a common term for developers, didn’t reflect the current state of it.&lt;/div&gt;&lt;div class="paragraph"&gt;The consolidation and re-branding to Business Central aims to provide a clear message about its targeted audience with a concise communication strategy. If you’re interested in giving it a try, Business Central is available to &lt;a href="https://repository.jboss.org/nexus/content/groups/public/org/kie/business-central/7.15.0.Final/business-central-7.15.0.Final-wildfly14.war" rel="noopener" target="_blank"&gt;download&lt;/a&gt; today!&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=b5FW7U1JKes:_DZWyzmUaGk:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=b5FW7U1JKes:_DZWyzmUaGk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=b5FW7U1JKes:_DZWyzmUaGk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=b5FW7U1JKes:_DZWyzmUaGk:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/b5FW7U1JKes" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Zq-RIVsdm6o" height="1" width="1" alt=""/&gt;</content><summary>Article originally posted here by Alex Porcelli 5 years ago, on November 2013 we released 6.0.0.Final, that included the first version of the Workbench. It has been a long journey so far, but today we’re announcing that we’re retiring the Workbench brand and officially adopting Business Central as the new brand! Historical Context The KIE group has been developing web tooling for more than a decad...</summary><dc:creator>Mario Fusco</dc:creator><dc:date>2018-11-30T11:39:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/b5FW7U1JKes/workbench-is-now-business-central.html</feedburner:origLink></entry><entry><title>Apache Camel 2.23 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ZOlZxyqtIVU/apache-camel-223-released.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_2_23_released</id><updated>2018-11-30T10:30:35Z</updated><published>2018-11-30T10:30:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Yesterday &lt;a href="http://camel.apache.org/2018/11/29/apache-camel-2230-released.html"&gt;Apache Camel 2.23&lt;/a&gt; was released which most noteworthy new feature is support for Spring Boot 2.1, where we also improved the starter components to include more metadata and more optimized for the improved Spring Boot auto configuration.&lt;br /&gt;&lt;br /&gt;This release is mainly a big bug fix release and some other minor new features. One of these features is to allow for basic dynamic queries in the SQL component on the consumer side.&lt;br /&gt;&lt;br /&gt;And as usual there are new components added too:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;AWS IAM - for managing Amazon IAM&lt;/li&gt;&lt;li&gt;Corda - to interactive with corda nodes&lt;/li&gt;&lt;li&gt;FHIR - to work with the fhir standard (health care)&lt;/li&gt;&lt;li&gt;Google Big Query Standard SQL - Google bigdata warehouse analytics&lt;/li&gt;&lt;li&gt;Google Calendar Stream - Google calendar in streaming mode&lt;/li&gt;&lt;li&gt;Google Sheets - To work with google sheets&lt;/li&gt;&lt;li&gt;Google Sheets Stream - To work with google sheets in streaming mode&lt;/li&gt;&lt;li&gt;IPFS - Interplanetary File System&lt;/li&gt;&lt;li&gt;Kubernetes HPA - To execute Kubernetes HPA operations&lt;/li&gt;&lt;li&gt;Kubernetes Job - To execute Kubernetes job operations&lt;/li&gt;&lt;li&gt;NSQ - To integrate with the NSQ messaging system&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;The next release will be Camel 2.24 which potentially are the last 2.x release as we are about to kick-off work on Camel 3.0. More details to follow soon.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=nHSZ3n5idPI:GgmPlwipM9E:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=nHSZ3n5idPI:GgmPlwipM9E:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=nHSZ3n5idPI:GgmPlwipM9E:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=nHSZ3n5idPI:GgmPlwipM9E:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=nHSZ3n5idPI:GgmPlwipM9E:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=nHSZ3n5idPI:GgmPlwipM9E:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=nHSZ3n5idPI:GgmPlwipM9E:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/nHSZ3n5idPI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ZOlZxyqtIVU" height="1" width="1" alt=""/&gt;</content><summary>Yesterday Apache Camel 2.23 was released which most noteworthy new feature is support for Spring Boot 2.1, where we also improved the starter components to include more metadata and more optimized for the improved Spring Boot auto configuration. This release is mainly a big bug fix release and some other minor new features. One of these features is to allow for basic dynamic queries in the SQL com...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2018-11-30T10:30:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/nHSZ3n5idPI/apache-camel-223-released.html</feedburner:origLink></entry><entry><title>Tipping Points in Open Source</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/AfVDccvtn7E/tipping-points-in-open-source.html" /><category term="Blockchain" scheme="searchisko:content:tags" /><category term="CNCF" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-tipping_points_in_open_source</id><updated>2018-11-30T09:52:04Z</updated><published>2018-11-30T09:49:00Z</published><content type="html">&lt;span style="font-family: inherit;"&gt;&lt;i&gt;Follow me on&lt;a class="markup--anchor markup--p-anchor" data-href="http://twitter.com/bibryam" href="http://twitter.com/bibryam" rel="noopener nofollow noopener" target="_blank"&gt; twitter&lt;/a&gt; for other posts in this space. A shorter version of this post was originally published on &lt;a href="https://opensource.com/article/18/11/3-new-tipping-points-open-source" target="_blank"&gt;Opensource.com&lt;/a&gt; under CC BY-SA 4.0. &lt;/i&gt;&lt;/span&gt;&lt;i&gt;If you prefer, read the same post on &lt;a href="https://medium.com/@bibryam/tipping-points-in-open-source-955546031f27" target="_blank"&gt;Medium&lt;/a&gt;.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;Over the last two decades open source has been expanding into all aspects of technology: from software to &lt;a href="https://opensource.com/resources/what-open-hardware" target="_blank"&gt;hardware&lt;/a&gt;, from small disruptive startup technologies to large &lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-family: inherit;"&gt;boring &lt;/span&gt;enterprise software, from open standards to &lt;a href="https://www.redhat.com/en/blog/red-hat-welcomes-milestone-addition-open-invention-network-microsoft-joins-safeguard-linux-patent-attacks?extIdCarryOver=true&amp;amp;sc_cid=70160000001273HAAQ" target="_blank"&gt;open patents&lt;/a&gt;. In this short post, I will try to call out a three tendencies that I think are reaching the tipping point in open source.&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt; Open for Non-Coders&lt;/span&gt;&lt;/h3&gt;&lt;span style="font-family: inherit;"&gt;For good or bad, as the name open &lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-family: inherit;"&gt;"&lt;/span&gt;source" suggests, this model has been primarily focused around the source code. Regardless of the intent or the believes, if we look at the open source communities, they are primarily composed of developers who are working on the source code. If we look deeper, the tools used in open source projects such as source control systems, issue trackers, mailing list names, chat channel names, etc - they all assume that the developers are the center of the universe. And that has caused a big loss. It is a big loss not having creative people, designers, document writers, event organizers, community managers, lawyers, accountants, and many others as part of the open source communities. We don't have such individuals actively participating in the open source communities because we don't have the processes and tools for such an inclusion yet. We need and want non-code contributions, but we don't have the means to measure their value, nor ways to reward their efforts in return. Reward by &lt;/span&gt;&lt;span style="font-family: inherit;"&gt;&lt;span style="font-family: inherit;"&gt;recognition from &lt;/span&gt;peers, by the community, by the employers, or anybody in general. As a result, it has been a lose-lose for decades. And we can see the implications in many open source projects with ugly looking websites, amateur logos, badly written and formatted documentation, disorganized events, etc. All of that leading for the so called "open source companies" filling the gap when it is inherently an open source problem.&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;&lt;br /&gt;&lt;/span&gt; &lt;span style="font-family: inherit;"&gt;The good news is that we are getting various signals indicating it is reaching the tipping point and a change is on the way:&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Linus Torvalds &lt;a href="https://lkml.org/lkml/2018/9/16/167" target="_blank"&gt;apologises&lt;/a&gt; for his "bad behavior". While this is not an action specifically focused around non-coders, it is a very symbolic act in making "open source" a non-hostile place for less-technical contributors.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;CNCF introduced the non-code contributions &lt;a href="https://kubernetes.io/blog/2018/10/04/introducing-the-non-code-contributors-guide/" target="_blank"&gt;guide&lt;/a&gt;. In addition to showing how many ways there are for contributing to open source projects as a non-coder, this also sets the baseline for such contributions that other open source projects and foundations will end up following to keep up.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;More or less around at the same time, ASF has been working in the same direction. There have been long discussions and we will have some concrete output very soon (that is ASF soon).&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;And there is a little known secret. One thing that non-coders (and new to open source) do not realize yet is that the easiest way to be recognized and become part of an established open source project is by performing non-coding activities. Nowadays, with complex software stacks, and tough competition, there is a pretty high bar for entering a project as a committer. Performing non-coding activities is less popular and it opens a fast backdoor to the open source communities.&lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt; Macro Acquisitions&lt;/span&gt;&lt;/h3&gt;&lt;div class="graf graf--p graf-after--p" id="fc0a" name="fc0a"&gt;&lt;span style="font-family: inherit;"&gt;Open source may have started in the hacker community as a way of scratching developers' personal itch, but today, it is the model where innovation happens. It is the model that even worlds largest software companies are transitioning to in order to continue dominating. And why is the enterprise so interested in open source? The "&lt;i&gt;Open Source in the Enterprise&lt;/i&gt;" &lt;a href="https://aws.amazon.com/opensource/enterprise-oss-book/" target="_blank"&gt;fee e-book&lt;/a&gt; I came across recently lists a few good reasons:&lt;/span&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Multiplying the company’s investment through contributions. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Benefiting from the most recent advances and avoid reinvent the wheel in-house. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Spreading knowledge of the software and its broader adoption. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Increasing the developer base and hiring pool. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Upgrading internal developer skills by learning from top coders in the field. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Building reputation - developers want to work for organizations they can boast about. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Recruiting and retaining - developers want to work on exciting projects that affect large groups of people. &lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Faster startup of new companies and projects through open source networking effect, etc.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;Many of these and other benefits of open source are recognized by large organizations which leads to even more open source adoption through company acquisitions. Building an open source company takes many years of effort in the open. Hiring developers who are good and also willing to work in the open, building a community around a project, and a business model is delicate effort. Companies that can manage that are particularly attractive for investment and acquisition as they serve as a catalyst in turning the acquirer an open source company at scale.&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-W1_dCW7_7zQ/W_U4B933OGI/AAAAAAAALnQ/bT_ulkMiV2EHMJ1nPF1Twn0HwIq6APAEQCLcBGAs/s1600/2018_os_acquisitio%2B.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="338" data-original-width="1600" height="132" src="https://3.bp.blogspot.com/-W1_dCW7_7zQ/W_U4B933OGI/AAAAAAAALnQ/bT_ulkMiV2EHMJ1nPF1Twn0HwIq6APAEQCLcBGAs/s640/2018_os_acquisitio%2B.png" width="640" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Open source related large acquisions of 2018&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&amp;nbsp;Above is a list of the biggest open source software companies acquired in the current year. The list of&lt;a href="http://oss.cash/" target="_blank"&gt; open source companies&lt;/a&gt; and the following acquisitions is getting bigger every other day and this trend is only getting stronger.&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: inherit;"&gt; Micro OSS Fundings&lt;/span&gt;&lt;/h3&gt;&lt;span style="font-family: inherit;"&gt;In addition to the macro acquisitions of open source companies, there is also an increase in the decentralized micro funding of &lt;a href="https://opensource.com/article/18/8/open-source-tokenomics" target="_blank"&gt;self sustaining&lt;/a&gt; open source projects.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: inherit;"&gt;On one end of the spectrum, there are open source projects that are maintained primarily by intrinsically motivated developers. On the other end, large open source companies are hiring developers to work on open source projects driven by company road maps and strategies. That leaves in the middle a large portion of open source projects that are not exciting enough for the accidental contributors, nor in the radar of the enterprise open source companies. In the recent years there is an increase in platforms for funding and sustaining these open source projects through bug bounties, micro payments, recurring donations, funding, subscriptions, etc. These open source funding platforms (which I have listed at &lt;a href="http://oss.fund/"&gt;http://oss.fund&lt;/a&gt;) allow individuals and open source users to take the responsibility of the open source sustainability in their own hands and pay the open source maintainers directly. It is the same open source model, but applied for value transfer rather than code contributions.&lt;/span&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/--b_sq6fti2A/W_xvNg8GgRI/AAAAAAAALns/o6niVfFGWzAoiMAjrpEHFPoepEhlTw7QACLcBGAs/s1600/oss_funnels.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1003" data-original-width="1600" height="250" src="https://3.bp.blogspot.com/--b_sq6fti2A/W_xvNg8GgRI/AAAAAAAALns/o6niVfFGWzAoiMAjrpEHFPoepEhlTw7QACLcBGAs/s400/oss_funnels.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;span style="font-family: inherit;"&gt;&amp;nbsp;The diagram above show the three intensive channels for open source contributors:&lt;/span&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Hobbyist contributing to open source projects because of intrinsic motivations rather than monetary value.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Regular, planned and centralized subsidization by companies with open source business model (open core, SaaS, support, services, etc), monetizing the open source projects directly.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style="font-family: inherit;"&gt;Irregular, micro, decentralized subsidization by independent open source users through &lt;a href="http://oss.fund/" target="_blank"&gt;OSS funding&lt;/a&gt; platforms.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;span style="font-family: inherit;"&gt;While the hobbyist and hackers started the open source movement, it got quickly turned into an enterprise monetization model. Now, having something for the remaining open source projects is welcome.&lt;/span&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/AfVDccvtn7E" height="1" width="1" alt=""/&gt;</content><summary>Follow me on twitter for other posts in this space. A shorter version of this post was originally published on Opensource.com under CC BY-SA 4.0. If you prefer, read the same post on Medium. Over the last two decades open source has been expanding into all aspects of technology: from software to hardware, from small disruptive startup technologies to large boring enterprise software, from open sta...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2018-11-30T09:49:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2018/11/tipping-points-in-open-source.html</feedburner:origLink></entry><entry><title>This week in JBoss (29th November 2018): Wait, what,... SpringBoot???</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WN43prpcLjM/this-week-in-jboss-29th-november-2018-wait-what-springboot" /><category term="audit" scheme="searchisko:content:tags" /><category term="byteman" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="Hibernate" scheme="searchisko:content:tags" /><category term="hibernate-orm" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="jakarta" scheme="searchisko:content:tags" /><category term="JavaEE" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="red_hat_summit" scheme="searchisko:content:tags" /><category term="Spring" scheme="searchisko:content:tags" /><category term="springboot" scheme="searchisko:content:tags" /><author><name>Romain Pelisse</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_29th_november_2018_wait_what_springboot</id><updated>2018-11-29T18:09:47Z</updated><published>2018-11-29T18:09:47Z</published><content type="html">&lt;!-- [DocumentBodyStart:6d8e96a4-e090-446f-9d00-9ebbf722a4e9] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;The last editorial was focused on the "breaking news" of the day. Even if the dust has far from settled on this, it's time for us to get back to business as usual! Well, not really as usual, because we have a rather awesome announcement about .... SpringBoot!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;SpringBoot&lt;/h2&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p&gt;While technically more of a Red Hat news than a JBoss community one, it seems to very much deserved to be mentioned here: &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/11/26/announcing-full-spring-boot-support-for-red-hat-openshift-application-runtimes/" rel="nofollow"&gt;Announcing: Full Spring Boot support for Red Hat OpenShift Application Runtimes !!!&lt;/a&gt; I won't comment more but I will urge to take a look at the post!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Infinispan - on road to version 10!&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The Infinispan project is getting close to release its next&amp;#160; major version and they have laid for us the road ahead: &lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/the-road-to-infinispan-10-alpha1.html" rel="nofollow"&gt;The road to Infinispan 10 (Alpha1)&lt;/a&gt;! This post is nice sum up of the coming new features and changes in the project. I highly recommend you take a look at it. And if you have not yet played with or experimented with Infinispan, maybe this &lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/11/quick-start-infinispan-on-kubernetes.html&amp;#226;&amp;#128;&amp;#139;" rel="nofollow"&gt;Quick start Infinispan on Kubernetes&lt;/a&gt; would be a nice opportunity to do so. And if you have familiar with Infinispan, you certainly want to explore its usage on Kubernetes!&lt;/p&gt;&lt;p class="active_link" style="min-height: 8pt; padding: 0px;" title="https://blog.infinispan.org/2018/11/quick-start-infinispan-on-kubernetes.html"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Tech Bytes&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The headlines above are already plenty to digest. However, you might still be hungry for a tidbits of technical knowledge. We therefore selected a few things for you to nimble on:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://mswiderski.blogspot.com/2018/11/audit-log-mode-applied-to-all-audit-data.html" rel="nofollow"&gt;Accelerate your business: Audit log mode applied to all audit data&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://www.optaplanner.org/blog/2018/11/19/TruckDodgesStormsWhileKeepingSalesHappy.html" rel="nofollow"&gt;OptaPlanner - Red Hat Mobile Portfolio Truck dodges storms while keeping Sales happy with OptaPlanner&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/11/23/hibernate-community-newsletter-2018-23/" rel="nofollow"&gt;Hibernate Community Newsletter 23/2018 - In Relation To&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/11/16/free-online-java-ee-development-course-from-red-hat-available-now/" rel="nofollow"&gt;Free Online Java EE Development Course From Red Hat Available Now - RHD Blog&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2 class="active_link" title="https://blog.infinispan.org/2018/11/quick-start-infinispan-on-kubernetes.html"&gt;Evangelist's Corner&lt;/h2&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p&gt;Not done yet? Worry not, our own Eric D. Schabell has also plenty for you to fest on!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/11/modern-business-logic-tooling-workshop-lab01.html" rel="nofollow"&gt;Modern Business Logic Tooling Workshop - Lab 01 Installing Decision Manager&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/11/red-hat-summit-2019-submitting-pitfalls-storytelling-career-planning.html" rel="nofollow"&gt;Red Hat Summit 2019 - Submitting all new pitfalls, storytelling, and career planning sessions&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/11/appdev-in-cloud-how-to-put-red-hat-process-automation-manager-in-your-cloud.html" rel="nofollow"&gt;AppDev in Cloud: How to put Red Hat Process Automation Manager in your Cloud&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Releases, releases, releases...&lt;/h2&gt;&lt;h2&gt;&lt;/h2&gt;&lt;p&gt;While we are blogging, twitting and emailing, the developers of the JBoss Community are quietly working and more importantly.... Releasing!&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/11/28/hibernate-orm-5117-final-release/" rel="nofollow"&gt;Hibernate ORM 5.1.17.Final released - In Relation To&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://bytemanblog.blogspot.com/2018/11/byteman-405-has-been-released.html" rel="nofollow"&gt;Byteman Blog: Byteman 4.0.5 has been released&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;That's all for this week's edition of the Editorial, please join us next time as we continue our journey through the JBoss Communities in search of interesting articles and news.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:6d8e96a4-e090-446f-9d00-9ebbf722a4e9] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WN43prpcLjM" height="1" width="1" alt=""/&gt;</content><summary>The last editorial was focused on the "breaking news" of the day. Even if the dust has far from settled on this, it's time for us to get back to business as usual! Well, not really as usual, because we have a rather awesome announcement about .... SpringBoot!   SpringBoot While technically more of a Red Hat news than a JBoss community one, it seems to very much deserved to be mentioned here: Annou...</summary><dc:creator>Romain Pelisse</dc:creator><dc:date>2018-11-29T18:09:47Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/11/29/this-week-in-jboss-29th-november-2018-wait-what-springboot</feedburner:origLink></entry><entry><title>Managing containerized system services with Podman</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-uAKazZ6mQo/" /><category term="container" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="docker" scheme="searchisko:content:tags" /><category term="fedora" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Podman" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="service" scheme="searchisko:content:tags" /><category term="services" scheme="searchisko:content:tags" /><category term="systemctl" scheme="searchisko:content:tags" /><category term="systemd" scheme="searchisko:content:tags" /><author><name>Alessandro Arrichiello</name></author><id>searchisko:content:id:jbossorg_blog-managing_containerized_system_services_with_podman</id><updated>2018-11-29T12:00:16Z</updated><published>2018-11-29T12:00:16Z</published><content type="html">&lt;p&gt;In this article, I discuss &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt;, but look at them from another angle. We usually refer to containers as the best technology for developing new cloud-native applications and orchestrating them with something like &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;. Looking back at the origins of containers, we&amp;#8217;ve mostly forgotten that containers were born for simplifying application distribution on standalone systems.&lt;/p&gt; &lt;p&gt;In this article, we&amp;#8217;ll talk about the use of containers as the perfect medium for installing applications and services on a &lt;a href="https://developers.redhat.com/products/rhel/"&gt;Red Hat Enterprise Linux&lt;/a&gt; (RHEL) system. Using containers doesn&amp;#8217;t have to be complicated, I&amp;#8217;ll show how to run MariaDB, Apache HTTPD, and WordPress in containers, while managing those containers like any other service, through systemd and &lt;code&gt;systemctl.&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Additionally, we&amp;#8217;ll explore Podman, which Red Hat has developed jointly with the Fedora community. If you don&amp;#8217;t know what Podman is yet, see my previous article, &lt;a href="https://developers.redhat.com/blog/2018/08/29/intro-to-podman/"&gt;Intro to Podman (Red Hat Enterprise Linux 7.6)&lt;/a&gt; and Tom Sweeney&amp;#8217;s &lt;a href="https://developers.redhat.com/blog/2018/11/20/buildah-podman-containers-without-daemons/"&gt;Containers without daemons: Podman and Buildah available in RHEL 7.6 and RHEL 8 Beta&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-515827"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Red Hat Container Catalog&lt;/h2&gt; &lt;p&gt;First of all, let&amp;#8217;s explore the containers that are available for Red Hat Enterprise Linux through the &lt;a href="https://access.redhat.com/containers/"&gt;Red Hat Container Catalog &lt;/a&gt;&lt;a href="https://access.redhat.com/containers/"&gt;(access.redhat.com/containers)&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-542087 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-1024x613.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1.png" alt="" width="1920" height="1150" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1.png 1920w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-300x180.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-768x460.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-021-Container-Catalog-Red-Hat-Customer_-https___access.redhat.com_containers_-1-1024x613.png 1024w" sizes="(max-width: 1920px) 100vw, 1920px" /&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;By clicking &lt;strong&gt;Explore The Catalog&lt;/strong&gt;, we&amp;#8217;ll have access to the full list of containers categories and products available in Red Hat Container Catalog.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore.png"&gt;&lt;img class=" alignnone size-full wp-image-535017 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-1024x178.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-1024x178.png" alt="Exploring the available containers" width="640" height="111" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-1024x178.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-300x52.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore-768x133.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-010-Container-Catalog-Red-Hat_-https___access.redhat.com_containers__explore.png 1382w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Clicking &lt;strong&gt;Red Hat Enterprise Linux&lt;/strong&gt; will bring us to the RHEL section, displaying all the available containers images for the system:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe.png"&gt;&lt;img class=" alignnone size-full wp-image-535027 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-1024x905.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-1024x905.png" alt="Available RHEL containers" width="640" height="566" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-1024x905.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-300x265.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe-768x678.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/FireShot-Capture-009-Container-Catalog-Red-Hat-Customer-_-https___access.redhat.com_containe.png 1372w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;At the time of writing this article, in the RHEL category there were more than 70 containers images, ready to be installed and used on RHEL 7 systems.&lt;/p&gt; &lt;p&gt;So let&amp;#8217;s choose some container images and try them on a Red Hat Enterprise Linux 7.6 system. For demo purposes, we&amp;#8217;ll try to use Apache HTTPD + PHP  and the MariaDB database for a WordPress blog.&lt;/p&gt; &lt;h2&gt;Install a containerized service&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ll start by installing our first containerized service for setting up a MariaDB database that we&amp;#8217;ll need for hosting the WordPress blog&amp;#8217;s data.&lt;/p&gt; &lt;p&gt;As a prerequisite for installing containerized system services, we need to install the utility named Podman on our Red Hat Enterprise Linux 7 system:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# subscription-manager repos --enable rhel-7-server-rpms --enable rhel-7-server-extras-rpms [root@localhost ~]# yum install podman&lt;/pre&gt; &lt;p&gt;As explained in my previous article, Podman complements Buildah and Skopeo by offering an experience similar to the Docker command line: allowing users to run standalone (non-orchestrated) containers. And Podman doesn’t require a daemon to run containers and pods, so we can easily say goodbye to big fat daemons.&lt;/p&gt; &lt;p&gt;By installing Podman, you&amp;#8217;ll see that Docker is no longer a required dependency!&lt;/p&gt; &lt;p&gt;As suggested by the Red Hat Container Catalog&amp;#8217;s MariaDB page, we can run the following commands to get the things done (we&amp;#8217;ll replace, of course, &lt;code&gt;docker&lt;/code&gt; with &lt;code&gt;podman&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman pull registry.access.redhat.com/rhscl/mariadb-102-rhel7 Trying to pull registry.access.redhat.com/rhscl/mariadb-102-rhel7...Getting image source signatures Copying blob sha256:9a1bea865f798d0e4f2359bd39ec69110369e3a1131aba6eb3cbf48707fdf92d 72.21 MB / 72.21 MB [======================================================] 9s Copying blob sha256:602125c154e3e132db63d8e6479c5c93a64cbfd3a5ced509de73891ff7102643 1.21 KB / 1.21 KB [========================================================] 0s Copying blob sha256:587a812f9444e67d0ca2750117dbff4c97dd83a07e6c8c0eb33b3b0b7487773f 6.47 MB / 6.47 MB [========================================================] 0s Copying blob sha256:5756ac03faa5b5fb0ba7cc917cdb2db739922710f885916d32b2964223ce8268 58.82 MB / 58.82 MB [======================================================] 7s Copying config sha256:346b261383972de6563d4140fb11e81c767e74ac529f4d734b7b35149a83a081 6.77 KB / 6.77 KB [========================================================] 0s Writing manifest to image destination Storing signatures 346b261383972de6563d4140fb11e81c767e74ac529f4d734b7b35149a83a081 [root@localhost ~]# podman images REPOSITORY TAG IMAGE ID CREATED SIZE registry.access.redhat.com/rhscl/mariadb-102-rhel7 latest 346b26138397 2 weeks ago 449MB&lt;/pre&gt; &lt;p&gt;After that, we can look at the &lt;a href="https://access.redhat.com/containers/?tab=tech-details&amp;#38;platform=systemimages#/registry.access.redhat.com/rhscl/mariadb-102-rhel7"&gt;Red Hat Container Catalog page&lt;/a&gt; for details on the needed variables for starting the MariaDB container image.&lt;/p&gt; &lt;p&gt;Inspecting the previous page, we can see that under &lt;em&gt;Labels&lt;/em&gt;, there is a label named &lt;em&gt;usage&lt;/em&gt; containing an example string for running this container image:&lt;/p&gt; &lt;pre&gt;usage docker run -d -e MYSQL_USER=user -e MYSQL_PASSWORD=pass -e MYSQL_DATABASE=db -p 3306:3306 rhscl/mariadb-102-rhel7&lt;/pre&gt; &lt;p&gt;After that we need some other information about our container image: the &amp;#8220;&lt;em&gt;user ID running inside the container&lt;/em&gt;&amp;#8221; and the &amp;#8220;&lt;em&gt;persistent volume location to attach&lt;/em&gt;&amp;#8220;:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/mariadb-102-rhel7 | grep User "User": "&lt;strong&gt;27&lt;/strong&gt;", [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/mariadb-102-rhel7 | grep -A1 Volume "Volumes": { "&lt;i&gt;/var/lib/mysql/data&lt;/i&gt;": {} [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/mariadb-102-rhel7 | grep -A1 ExposedPorts "ExposedPorts": { "&lt;i&gt;3306&lt;/i&gt;/tcp": {}&lt;/pre&gt; &lt;p&gt;At this point, we have to create the directories that will handle the container&amp;#8217;s data; remember that containers are ephemeral by default. Then we set also the right permissions:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# mkdir -p /opt/var/lib/mysql/data [root@localhost ~]# chown 27:27 /opt/var/lib/mysql/data&lt;/pre&gt; &lt;p&gt;Then we can set up our &lt;code&gt;systemd&lt;/code&gt; unit file for handling the database. We&amp;#8217;ll use a unit file similar to the one prepared in the previous article:&lt;/p&gt; &lt;pre class="notranslate"&gt;[root@localhost ~]# cat /etc/systemd/system/mariadb-service.service [Unit] Description=Custom MariaDB Podman Container After=network.target [Service] Type=simple TimeoutStartSec=5m ExecStartPre=-/usr/bin/podman rm "mariadb-service" ExecStart=/usr/bin/podman run --name mariadb-service -v /opt/var/lib/mysql/data:/var/lib/mysql/data:Z -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=mysecret -e MYSQL_DATABASE=wordpress --net host registry.access.redhat.com/rhscl/mariadb-102-rhel7 ExecReload=-/usr/bin/podman stop "mariadb-service" ExecReload=-/usr/bin/podman rm "mariadb-service" ExecStop=-/usr/bin/podman stop "mariadb-service" Restart=always RestartSec=30 [Install] WantedBy=multi-user.target&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s take apart our &lt;code&gt;ExecStart&lt;/code&gt; command and analyze how it&amp;#8217;s built:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;/usr/bin/podman run --name mariadb-service&lt;/code&gt; says we want to run a container that will be named &lt;code&gt;mariadb-service&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;em&gt;&amp;#8211;&lt;/em&gt;&lt;code&gt;v /opt/var/lib/mysql/data:/var/lib/mysql/data:Z&lt;/code&gt;  says we want to map the just-created data directory to the one inside the container. The &lt;code&gt;Z&lt;/code&gt; option informs Podman to map correctly the SELinux context for avoiding permissions issues.&lt;/li&gt; &lt;li&gt;&lt;em&gt;&amp;#8211;&lt;/em&gt;&lt;code&gt;e MYSQL_USER=wordpress -e MYSQL_PASSWORD=mysecret -e MYSQL_DATABASE=wordpress&lt;/code&gt; identifies the additional environment variables to use with our MariaDB container. We&amp;#8217;re defining the username, the password, and the database name to use.&lt;/li&gt; &lt;li&gt;&lt;code&gt;--net host&lt;/code&gt; maps the container&amp;#8217;s network to the RHEL host.&lt;/li&gt; &lt;li&gt;&lt;code&gt;registry.access.redhat.com/rhscl/mariadb-102-rhel7&lt;/code&gt; specifies the container image to use.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;We can now reload the &lt;code&gt;systemd&lt;/code&gt; catalog and start the service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# systemctl daemon-reload [root@localhost ~]# systemctl start mariadb-service [root@localhost ~]# systemctl status mariadb-service mariadb-service.service - Custom MariaDB Podman Container Loaded: loaded (/etc/systemd/system/mariadb-service.service; static; vendor preset: disabled) Active: active (running) since Thu 2018-11-08 10:47:07 EST; 22s ago Process: 16436 ExecStartPre=/usr/bin/podman rm mariadb-service ​(code=exited, status=0/SUCCESS) Main PID: 16452 (podman) CGroup: /system.slice/mariadb-service.service └─16452 /usr/bin/podman run --name mariadb-service -v /opt/var/lib/mysql/data:/var/lib/mysql/data:Z -e MYSQL_USER=wordpress -e MYSQL_PASSWORD=mysecret -e MYSQL_DATABASE=wordpress --net host regist... Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140276291061504 [Note] InnoDB: Buffer pool(s) load completed at 181108 15:47:14 Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Plugin 'FEEDBACK' is disabled. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Server socket created on IP: '::'. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Warning] 'user' entry 'root@b75779533f08' ignored in --skip-name-resolve mode. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Warning] 'user' entry '@b75779533f08' ignored in --skip-name-resolve mode. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Warning] 'proxies_priv' entry '@% root@b75779533f08' ignored in --skip-name-resolve mode. Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Reading of all Master_info entries succeded Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] Added new Master_info '' to hash table Nov 08 10:47:14 localhost.localdomain podman[16452]: 2018-11-08 15:47:14 140277156538560 [Note] /opt/rh/rh-mariadb102/root/usr/libexec/mysqld: ready for connections. Nov 08 10:47:14 localhost.localdomain podman[16452]: Version: '10.2.8-MariaDB' socket: '/var/lib/mysql/mysql.sock' port: 3306 MariaDB Server&lt;/pre&gt; &lt;p&gt;Perfect! MariaDB is running, so we can now start working on the Apache HTTPD + PHP container for our WordPress service.&lt;/p&gt; &lt;p&gt;First of all, let&amp;#8217;s pull the right container from Red Hat Container Catalog:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman pull registry.access.redhat.com/rhscl/php-71-rhel7 Trying to pull registry.access.redhat.com/rhscl/php-71-rhel7...Getting image source signatures Skipping fetch of repeat blob sha256:9a1bea865f798d0e4f2359bd39ec69110369e3a1131aba6eb3cbf48707fdf92d Skipping fetch of repeat blob sha256:602125c154e3e132db63d8e6479c5c93a64cbfd3a5ced509de73891ff7102643 Skipping fetch of repeat blob sha256:587a812f9444e67d0ca2750117dbff4c97dd83a07e6c8c0eb33b3b0b7487773f Copying blob sha256:12829a4d5978f41e39c006c78f2ecfcd91011f55d7d8c9db223f9459db817e48 82.37 MB / 82.37 MB [=====================================================] 36s Copying blob sha256:14726f0abe4534facebbfd6e3008e1405238e096b6f5ffd97b25f7574f472b0a 43.48 MB / 43.48 MB [======================================================] 5s Copying config sha256:b3deb14c8f29008f6266a2754d04cea5892ccbe5ff77bdca07f285cd24e6e91b 9.11 KB / 9.11 KB [========================================================] 0s Writing manifest to image destination Storing signatures b3deb14c8f29008f6266a2754d04cea5892ccbe5ff77bdca07f285cd24e6e91b&lt;/pre&gt; &lt;p&gt;We can now look through this container image to get some details:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/php-71-rhel7 | grep User "User": "1001", "User": "1001" [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/php-71-rhel7 | grep -A1 Volume [root@localhost ~]# podman inspect registry.access.redhat.com/rhscl/php-71-rhel7 | grep -A1 ExposedPorts "ExposedPorts": { "8080/tcp": {},&lt;/pre&gt; &lt;p&gt;As you can see from the previous commands, we got no volume from the container details. Are you asking why? It&amp;#8217;s because this container image, even if it&amp;#8217;s part of RHSCL (formerly known as Red Hat Software Collections), has been prepared for working with the Source-to-Image (S2I) builder. For more info on the S2I builder, please take a look at its &lt;a href="https://github.com/openshift/source-to-image"&gt;GitHub project page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Unfortunately, at this moment, the S2I utility is strictly dependent on Docker, but for demo purposes, we would like to avoid it..!&lt;/p&gt; &lt;p&gt;So moving back to our issue, what can we do for guessing the right folder to mount on our PHP container? We can easily guess the right location by looking at all the environment variables for the container image, where we will find &lt;code&gt;APP_DATA=/opt/app-root/src&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;So let&amp;#8217;s create this directory with the right permissions; we&amp;#8217;ll also download the latest package for our WordPress service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# mkdir -p /opt/app-root/src/ [root@localhost ~]# curl -o latest.tar.gz https://wordpress.org/latest.tar.gz [root@localhost ~]# tar -vxf latest.tar.gz [root@localhost ~]# mv wordpress/* /opt/app-root/src/ [root@localhost ~]# chown 1001 -R /opt/app-root/src&lt;/pre&gt; &lt;p&gt;We&amp;#8217;re now ready for creating our Apache &lt;code&gt;http&lt;/code&gt; + PHP &lt;code&gt;systemd&lt;/code&gt; unit file:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# cat /etc/systemd/system/httpdphp-service.service [Unit] Description=Custom httpd + php Podman Container After=mariadb-service.service [Service] Type=simple TimeoutStartSec=30s ExecStartPre=-/usr/bin/podman rm "httpdphp-service" ExecStart=/usr/bin/podman run --name httpdphp-service -p 8080:8080 -v /opt/app-root/src:/opt/app-root/src:Z registry.access.redhat.com/rhscl/php-71-rhel7 /bin/sh -c /usr/libexec/s2i/run ExecReload=-/usr/bin/podman stop "httpdphp-service" ExecReload=-/usr/bin/podman rm "httpdphp-service" ExecStop=-/usr/bin/podman stop "httpdphp-service" Restart=always RestartSec=30 [Install] WantedBy=multi-user.target&lt;/pre&gt; &lt;p&gt;We need then to reload the &lt;code&gt;systemd&lt;/code&gt; unit files and start our latest service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# systemctl daemon-reload [root@localhost ~]# systemctl start httpdphp-service [root@localhost ~]# systemctl status httpdphp-service httpdphp-service.service - Custom httpd + php Podman Container Loaded: loaded (/etc/systemd/system/httpdphp-service.service; static; vendor preset: disabled) Active: active (running) since Thu 2018-11-08 12:14:19 EST; 4s ago Process: 18897 ExecStartPre=/usr/bin/podman rm httpdphp-service (code=exited, status=125) Main PID: 18913 (podman) CGroup: /system.slice/httpdphp-service.service └─18913 /usr/bin/podman run --name httpdphp-service -p 8080:8080 -v /opt/app-root/src:/opt/app-root/src:Z registry.access.redhat.com/rhscl/php-71-rhel7 /bin/sh -c /usr/libexec/s2i/run Nov 08 12:14:20 localhost.localdomain podman[18913]: =&amp;#62; sourcing 50-mpm-tuning.conf ... Nov 08 12:14:20 localhost.localdomain podman[18913]: =&amp;#62; sourcing 40-ssl-certs.sh ... Nov 08 12:14:20 localhost.localdomain podman[18913]: AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 10.88.0.12. Set the 'ServerName' directive globall... this message Nov 08 12:14:20 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:20.925637 2018] [ssl:warn] [pid 1] AH01909: 10.88.0.12:8443:0 server certificate does NOT include an ID which matches the server name Nov 08 12:14:20 localhost.localdomain podman[18913]: AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 10.88.0.12. Set the 'ServerName' directive globall... this message Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.017164 2018] [ssl:warn] [pid 1] AH01909: 10.88.0.12:8443:0 server certificate does NOT include an ID which matches the server name Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.017380 2018] [http2:warn] [pid 1] AH10034: The mpm module (prefork.c) is not supported by mod_http2. The mpm determines how things are ... Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.018506 2018] [lbmethod_heartbeat:notice] [pid 1] AH02282: No slotmem from mod_heartmonitor Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.101823 2018] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.27 (Red Hat) OpenSSL/1.0.1e-fips configured -- resuming normal operations Nov 08 12:14:21 localhost.localdomain podman[18913]: [Thu Nov 08 17:14:21.101849 2018] [core:notice] [pid 1] AH00094: Command line: 'httpd -D FOREGROUND' Hint: Some lines were ellipsized, use -l to show in full.&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s open the 8080 port on our system&amp;#8217;s firewall for connecting to our brand new WordPress service:&lt;/p&gt; &lt;pre&gt;[root@localhost ~]# firewall-cmd --permanent --add-port=8080/tcp [root@localhost ~]# firewall-cmd --add-port=8080/tcp&lt;/pre&gt; &lt;p&gt;We can surf to our Apache web server:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06.png"&gt;&lt;img class=" alignnone size-full wp-image-535947 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-1024x552.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06.png" alt="Apache web server" width="688" height="371" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06.png 1677w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-300x162.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-768x414.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-18-16-06-1024x552.png 1024w" sizes="(max-width: 688px) 100vw, 688px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Start the installation process, and define all the needed details:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46.png"&gt;&lt;img class=" alignnone size-full wp-image-535957 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-1024x578.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46.png" alt="Start the installation process" width="700" height="395" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46.png 1567w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-300x169.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-768x433.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-04-46-1024x578.png 1024w" sizes="(max-width: 700px) 100vw, 700px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;And finally, run the installation!&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07.png"&gt;&lt;img class=" alignnone size-full wp-image-535977 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-1024x408.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07.png" alt="Run the installation" width="701" height="280" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07.png 1026w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-300x120.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-768x306.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-07-07-1024x408.png 1024w" sizes="(max-width: 701px) 100vw, 701px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;At the end, we should reach out our brand new blog, running on Apache &lt;code&gt;httpd&lt;/code&gt; + PHP backed by a great MariaDB database!&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-535967 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-1024x806.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39.png" alt="" width="701" height="552" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39.png 1617w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-300x236.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-768x605.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-from-2018-11-08-19-08-39-1024x806.png 1024w" sizes="(max-width: 701px) 100vw, 701px" /&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;That&amp;#8217;s all folks; may containers be with you!&lt;/p&gt; &lt;h2 class="section-subheading-title"&gt;&lt;/h2&gt; &lt;h2&gt;About Alessandro&lt;/h2&gt; &lt;p&gt;&lt;img class="bio-img-display" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/profile_picture-300x300.jpg" alt="Alessandro Arrichiello" align="left" /&gt;&lt;/p&gt; &lt;p class="author-info selectionShareable"&gt;Alessandro Arrichiello is a Solution Architect for Red Hat Inc. He has a passion for GNU/Linux systems, which began at age 14 and continues today. He worked with tools for automating Enterprise IT: configuration management and continuous integration through virtual platforms. He’s now working on distributed cloud environment involving PaaS (OpenShift), IaaS (OpenStack) and Processes Management (CloudForms), Containers building, instances creation, HA services management, workflows build.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#38;linkname=Managing%20containerized%20system%20services%20with%20Podman" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F29%2Fmanaging-containerized-system-services-with-podman%2F&amp;#038;title=Managing%20containerized%20system%20services%20with%20Podman" data-a2a-url="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/" data-a2a-title="Managing containerized system services with Podman"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/"&gt;Managing containerized system services with Podman&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-uAKazZ6mQo" height="1" width="1" alt=""/&gt;</content><summary>In this article, I discuss containers, but look at them from another angle. We usually refer to containers as the best technology for developing new cloud-native applications and orchestrating them with something like Kubernetes. Looking back at the origins of containers, we’ve mostly forgotten that containers were born for simplifying application distribution on standalone systems. In this articl...</summary><dc:creator>Alessandro Arrichiello</dc:creator><dc:date>2018-11-29T12:00:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/29/managing-containerized-system-services-with-podman/</feedburner:origLink></entry><entry><title>Integration Key to Customer Experience - External Application Details</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/EKnTR2BZCkk/integration-key-to-customer-experience-external-application-details.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Architecture Blueprints" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="BPM Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-integration_key_to_customer_experience_external_application_details</id><updated>2018-11-30T15:13:15Z</updated><published>2018-11-29T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-X6mCgHXoDIQ/W__mBJlS5lI/AAAAAAAAtV4/FCz9r9mwThcWe8rlsgl4CJ1OMsg0S4hUgCLcBGAs/s1600/Screenshot%2B2018-11-29%2Bat%2B14.11.16.png" imageanchor="1" style="clear: left; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="343" data-original-width="1600" height="68" src="https://2.bp.blogspot.com/-X6mCgHXoDIQ/W__mBJlS5lI/AAAAAAAAtV4/FCz9r9mwThcWe8rlsgl4CJ1OMsg0S4hUgCLcBGAs/s320/Screenshot%2B2018-11-29%2Bat%2B14.11.16.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Part 3 - External Application Details&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style="text-align: left;"&gt;&lt;/div&gt;In &lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-architectural-elements.html" target="_blank"&gt;my previous article from this series&lt;/a&gt; we took a high level view at the common architectural elements that determine how your integration becomes the key to transforming your customer experience.&lt;br /&gt;&lt;br /&gt;The process was laid out how I've approached the use case and how I've used successful customer portfolio solutions as the basis for researching a generic architectural blueprint. The only thing left to cover was the order in which you'll be led through the blueprint details.&lt;br /&gt;&lt;br /&gt;This article takes you deeper to cover details pertaining to the&amp;nbsp;specific elements (&lt;i&gt;mobile and web application deployments)&lt;/i&gt;&amp;nbsp;from the generic architectural overview.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Architectural details&lt;/h3&gt;&lt;div&gt;&lt;a href="https://2.bp.blogspot.com/-h6FO-sdoH4A/W-AjgSgf-aI/AAAAAAAAtPw/JFoyKy0JPbU9hj0jggWQqESQc6Ywr0GaQCPcBGAYYCw/s1600/omnichannel-header.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="454" data-original-width="895" height="162" src="https://2.bp.blogspot.com/-h6FO-sdoH4A/W-AjgSgf-aI/AAAAAAAAtPw/JFoyKy0JPbU9hj0jggWQqESQc6Ywr0GaQCPcBGAYYCw/s320/omnichannel-header.png" title="" width="320" /&gt;&lt;/a&gt;As mentioned before, the architectural details covered here are base on real customer integration solutions using open source technologies. The elements presented here are then the &lt;i&gt;generic common architectural elements&lt;/i&gt;&amp;nbsp;that I've identified and collected in to the generic architectural blueprint. It's my intent to provide a blueprint that provides guidance and not deep technical details.&lt;br /&gt;&lt;br /&gt;This section covers the visual representations as presented, but it's expected that they'll be evolving visually over time. There are many ways to represent each element in this architectural blueprint, but I've chosen icons, text and colours that I hope are going to make it all easy to absorb. Feel free to post comments at the bottom of this post, or &lt;a href="https://www.schabell.org/p/contact.html" target="_blank"&gt;contact me directly&lt;/a&gt; with your feedback.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now let's take a look at the details in this architecture and outline the elements uncovered in my research.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;Mobile applications&lt;/h3&gt;&lt;div&gt;When looking at external application deployments, it's split between mobile and web applications. Both are generic broad terms used to describe the types of application deployments discovered in the researched customers.&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;a href="https://1.bp.blogspot.com/-pOKwSZ4neiE/XAFTdliE0_I/AAAAAAAAtWI/UU0EAxK3IhkjxKSQSh2HC9tqXMb4TPhNwCLcBGAs/s1600/Screenshot%2B2018-11-30%2Bat%2B16.12.20.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="520" data-original-width="790" height="210" src="https://1.bp.blogspot.com/-pOKwSZ4neiE/XAFTdliE0_I/AAAAAAAAtWI/UU0EAxK3IhkjxKSQSh2HC9tqXMb4TPhNwCLcBGAs/s320/Screenshot%2B2018-11-30%2Bat%2B16.12.20.png" title="" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;i&gt;Mobile applications&lt;/i&gt;&amp;nbsp;are anything not specific to the web, such as an application for the mobile phone, tablets or some sort of portable device not specifically defined. It's what the customers are using to&amp;nbsp;interact directly with a company. This can be mobile applications deployed by the company themselves or developed by third party organizations to interact with the services offered.&lt;br /&gt;&lt;br /&gt;These applications can be created using many different languages, libraries and target diverse platforms. Research showed that integration through the use of a&amp;nbsp; &lt;a href="https://developers.redhat.com/products/mobileplatform/overview/" target="_blank"&gt;mobile application platform&lt;/a&gt; was favoured above DIY mobile development to provide a platform for managing and maintaining mobile application development, integration and deployment.&lt;br /&gt;&lt;br /&gt;These applications link customers to a companies solutions and can encompass voice, video, and/or chat features. They access the organizational through the API gateway using single sign on for security. Interactions go through the following microservices:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;frontend microservices (providing access to internal integration microservices)&lt;/li&gt;&lt;li&gt;process facade microservices (providing access to automated integration processes)&lt;/li&gt;&lt;li&gt;other applications (providing access to aggregated microservices or other internal applications)&lt;/li&gt;&lt;/ul&gt;When external application are not deployed on mobile devices, then we're looking at &lt;i&gt;web applications.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Web applications&lt;/h3&gt;&lt;i&gt;Web applications&lt;/i&gt;&amp;nbsp;are the category for all&amp;nbsp;other types of applications, web sites and/or services that are deployed by the company or any third party organizations to interact with the services offered.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-XSJNeZjNy2Y/W__kTuFF3nI/AAAAAAAAtVs/24QHJx3-GYkAlRDa0t9pbliHdKJZwLySACLcBGAs/s1600/Screenshot%2B2018-11-29%2Bat%2B13.53.53.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="omnichannel customer experience" border="0" data-original-height="616" data-original-width="878" height="224" src="https://1.bp.blogspot.com/-XSJNeZjNy2Y/W__kTuFF3nI/AAAAAAAAtVs/24QHJx3-GYkAlRDa0t9pbliHdKJZwLySACLcBGAs/s320/Screenshot%2B2018-11-29%2Bat%2B13.53.53.png" title="" width="320" /&gt;&lt;/a&gt;While in the traditional sense it can be anything hosted outside the company, we've encountered an internal (to the researched organization) helpdesk application that contained an interactive voice response (IVR) system integrated with email and text options. The solution treated this helpdesk application as an external web application for integration purposes and constructed the necessary microservices to interact with its API layer.&lt;br /&gt;&lt;br /&gt;These applications link customers to a companies solutions or provide external third party information to a companies information architecture to enrich their customers' experiences. They access the organizational through the API gateway using single sign on for security. Interactions go through the following microservices:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;frontend microservices (providing access to internal integration microservices)&lt;/li&gt;&lt;li&gt;process facade microservices (providing access to automated integration processes)&lt;/li&gt;&lt;li&gt;other applications (providing access to aggregated microservices or other internal applications)&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;These details are not all knowing, but should give you the guidance you'd need to get started in your own architectural situations.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3&gt;What's next&lt;/h3&gt;&lt;div&gt;This overview covers the external applications deployment elements that make up our architecture blueprint for ominchannel customer experience use case.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;An overview of the series on omnichannel customer experience portfolio architecture blueprint can be found here:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-introduction.html" target="_blank"&gt;An introduction&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-architectural-elements.html" target="_blank"&gt;Generic common architectural elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2018/11/integration-key-to-customer-experience-external-application-details.html" target="_blank"&gt;External application details&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Details of specific elements (api gateways, container platform, storage services)&lt;/li&gt;&lt;li&gt;Application integration details&lt;/li&gt;&lt;li&gt;Dissecting several specific application integration architectures&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;Catch up on any articles you missed by following one of the links above.&lt;br /&gt;&lt;br /&gt;Next in this series, taking a look at the details of&amp;nbsp;specific elements in an architecture for omnichannel customer experience.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6xuzPuWvCnk:hUzomTfdOmk:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6xuzPuWvCnk:hUzomTfdOmk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6xuzPuWvCnk:hUzomTfdOmk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=6xuzPuWvCnk:hUzomTfdOmk:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=6xuzPuWvCnk:hUzomTfdOmk:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/6xuzPuWvCnk" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/EKnTR2BZCkk" height="1" width="1" alt=""/&gt;</content><summary>Part 3 - External Application Details In my previous article from this series we took a high level view at the common architectural elements that determine how your integration becomes the key to transforming your customer experience. The process was laid out how I've approached the use case and how I've used successful customer portfolio solutions as the basis for researching a generic architectu...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-11-29T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/6xuzPuWvCnk/integration-key-to-customer-experience-external-application-details.html</feedburner:origLink></entry><entry><title>Hibernate ORM 5.4.0.CR2 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/LivsXojFzjM/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Guillaume Smet</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_4_0_cr2_released</id><updated>2018-11-29T17:42:23Z</updated><published>2018-11-29T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We released the second candidate release of Hibernate ORM 5.4.0.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We have fixed a few issues and improved the documentation a bit.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please consider testing this candidate release so the upgrade can be as smooth as possible.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What’s new&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="jaxb-upgrade"&gt;&lt;a class="anchor" href="#jaxb-upgrade"&gt;&lt;/a&gt;JAXB upgrade&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We eventually decided to upgrade JAXB to 2.3.1 because the JAXB 2.2 pom files are invalid and cause problems in certain situations.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our OSGi tests (which were the reason we kept JAXB 2.2 for CR1) are still using 2.2, which is the version included in Karaf, but the rest of ORM uses 2.3.1.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="bug-fixes-and-minor-improvements"&gt;&lt;a class="anchor" href="#bug-fixes-and-minor-improvements"&gt;&lt;/a&gt;Bug fixes and minor improvements&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release contains a few other bugfixes and minor improvements.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find the full list of changes &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31729/tab/release-report-all-issues"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?version=31729&amp;amp;styleName=Html&amp;amp;projectId=10031"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="getting-5-4-0-cr2"&gt;&lt;a class="anchor" href="#getting-5-4-0-cr2"&gt;&lt;/a&gt;Getting 5.4.0.CR2&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;All details are available and up to date on &lt;a href="http://hibernate.org/orm/releases/5.4/#get-it"&gt;the dedicated page on hibernate.org&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-s-next"&gt;&lt;a class="anchor" href="#what-s-next"&gt;&lt;/a&gt;What’s next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We will release 5.4.0.Final in the coming weeks and will release regular maintenance releases thereafter.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="feedback-issues-ideas"&gt;&lt;a class="anchor" href="#feedback-issues-ideas"&gt;&lt;/a&gt;Feedback, issues, ideas?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To get in touch, use the usual channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/tagged/hibernate"&gt;&lt;strong&gt;hibernate&lt;/strong&gt; tag on Stack Overflow&lt;/a&gt; (usage questions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-orm"&gt;User forum&lt;/a&gt; (usage questions, general feedback)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/HHH"&gt;Issue tracker&lt;/a&gt; (bug reports, feature requests)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt; (development-related discussions)&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/LivsXojFzjM" height="1" width="1" alt=""/&gt;</content><summary>We released the second candidate release of Hibernate ORM 5.4.0. We have fixed a few issues and improved the documentation a bit. Please consider testing this candidate release so the upgrade can be as smooth as possible. What’s new JAXB upgrade We eventually decided to upgrade JAXB to 2.3.1 because the JAXB 2.2 pom files are invalid and cause problems in certain situations. Our OSGi tests (which ...</summary><dc:creator>Guillaume Smet</dc:creator><dc:date>2018-11-29T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/11/29/hibernate-orm-540-cr2-out/</feedburner:origLink></entry><entry><title>Announcing the Red Hat OpenShift extension for Visual Studio Code: Public Preview</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-rjfT8pvOUY/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="OpenShift Connector" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Visual Studio Code" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><author><name>Mohit Suman</name></author><id>searchisko:content:id:jbossorg_blog-announcing_the_red_hat_openshift_extension_for_visual_studio_code_public_preview</id><updated>2018-11-28T14:00:02Z</updated><published>2018-11-28T14:00:02Z</published><content type="html">&lt;p&gt;We are extremely pleased to announce that the preview release of the &lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; extension for Visual Studio Code is now available. You can download the &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector"&gt;OpenShift Connector&lt;/a&gt; extension from the marketplace or install it directly from the extension gallery in Visual Studio Code.&lt;/p&gt; &lt;p&gt;This article provides describes the features and benefits of the extension and provides installation details. It also provides a demo of how using the extension improves the end-to-end experience of developing and deploying Spring Boot applications to local OpenShift cluster.&lt;/p&gt; &lt;h2&gt;&lt;span id="more-537657"&gt;&lt;/span&gt;&lt;/h2&gt; &lt;h2&gt;Benefits of using the extension&lt;/h2&gt; &lt;p&gt;&lt;a href="https://www.openshift.com/"&gt;Red Hat OpenShift&lt;/a&gt; is a container application platform that brings the power of &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt; to the enterprise. Regardless of the applications architecture, OpenShift lets you easily and quickly build, develop, and deploy in nearly any infrastructure, public or private.&lt;/p&gt; &lt;p&gt;Therefore, whether it’s on-premises, in a public cloud, or hosted, you have an award-winning platform to get your next big idea to market ahead of your competition.&lt;/p&gt; &lt;p&gt;Using OpenShift Connector, you can interact with Red Hat OpenShift using a local instance of OpenShift clusters such as minishift/&lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;. Leveraging the OpenShift Application Explorer view, you can improve the end-to-end experience of developing applications.&lt;/p&gt; &lt;p&gt;The extension enables you to perform all this directly using Visual Studio Code and removes the complexity of memorizing some fairly complicated CLI commands.&lt;/p&gt; &lt;h2&gt;Developer use-case&lt;/h2&gt; &lt;p&gt;On a developer workstation, when you load a Spring Boot project, the language support detection automatically proposes to load a Spring Boot language support extension and suggests downloading and installing the OpenShift Connector. You can install the recommended extension in Visual Studio Code.&lt;/p&gt; &lt;p&gt;Therefore, once the OpenShift Connector is installed, OpenShift Application View is enabled on the Explorer panel in Visual Studio Code. Then, you can access the view and connect to a running OpenShift cluster and perform the required operations.&lt;/p&gt; &lt;h2&gt;Demo&lt;/h2&gt; &lt;p&gt;Here is a working &lt;a href="https://www.youtube.com/watch?v=XIHLbUvGuFM" target="_blank" rel="noopener"&gt;demo &lt;/a&gt;of the end-to-end experience of developing and deploying Spring Boot applications to a local OpenShift cluster using the extension. This demo aims to simplify the OpenShift experience for Visual Studio developers. For detailed installation and usage information, please refer to the &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/blob/master/README.md"&gt;readme&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/XIHLbUvGuFM?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;Note&lt;/b&gt;:&lt;em&gt; In this Preview release, we support only Java and Node.JS components. We will be supporting other languages in future releases.&lt;/em&gt;&lt;/p&gt; &lt;h2 id="installation"&gt;Installation&lt;/h2&gt; &lt;p&gt;First, you will need to install &lt;a title="https://code.visualstudio.com/download" href="https://code.visualstudio.com/download"&gt;Visual Studio Code&lt;/a&gt; 1.12.0 or later.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;To install the extension with the latest version of Visual Studio Code, bring up the Visual Studio Code Command Palette (press F1).&lt;/li&gt; &lt;li&gt;Type &lt;code&gt;install&lt;/code&gt; and &lt;strong&gt;choose Extensions: Install Extensions&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;In the&lt;strong&gt; Search Extensions in Marketplace&lt;/strong&gt; text box, type &lt;code&gt;OpenShift&lt;/code&gt;. Find the &lt;code&gt;OpenShift Connector&lt;/code&gt; extension published by Red Hat and click the&lt;strong&gt; Install&lt;/strong&gt; button.&lt;/li&gt; &lt;li&gt;Subsequently, you should reload Visual Studio Code and there will be an OpenShift Icon in the Explorer View.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/openshift-extension-installation.gif"&gt;&lt;img class="attachment-266x266 aligncenter" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/openshift-extension-installation.gif" alt="OpenShift Connector installation demo" width="975" height="580" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Dependencies&lt;/h2&gt; &lt;p&gt;This extension uses two CLI tools to interact with an OpenShift cluster:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The OpenShift client tool: &lt;a href="https://github.com/openshift/origin/releases" target="_blank" rel="noopener"&gt;oc&lt;/a&gt;&lt;/li&gt; &lt;li&gt;The OpenShift Do tool: &lt;a href="https://github.com/redhat-developer/odo/releases" target="_blank" rel="noopener"&gt;odo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If &lt;code&gt;oc&lt;/code&gt; and &lt;code&gt;odo&lt;/code&gt; are located in a directory contained in your PATH, they will be used automatically. If they aren&amp;#8217;t present in your PATH, the extension will prompt you to download and install them.&lt;/p&gt; &lt;h2&gt;The extension in action&lt;/h2&gt; &lt;h3&gt;Connecting to your OpenShift instance&lt;/h3&gt; &lt;ol&gt; &lt;li&gt;Start the local OpenShift instance using minishift/&lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;After the extension is installed in Visual Studio Code, it will prompt you to download the required dependencies (&lt;code&gt;oc&lt;/code&gt;, &lt;code&gt;odo&lt;/code&gt;).&lt;/li&gt; &lt;li&gt;The OpenShift Application Explorer view is activated once you click the OpenShift icon in the Explorer View.&lt;/li&gt; &lt;li&gt;You then need to log in to the running OpenShift cluster ( &lt;img class=" alignnone wp-image-540777 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/login-dark.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/login-dark.png" alt="" width="12" height="12" /&gt; &amp;#8211; Log in to Cluster).&lt;/li&gt; &lt;li&gt;Provide the cluster URL to connect to the running instance of OpenShift.&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM.png"&gt;&lt;img class=" alignnone wp-image-540787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-1024x415.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM.png" alt="logging in to OpenShift" width="845" height="343" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM.png 3225w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-300x122.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-768x311.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.12.43-AM-1024x415.png 1024w" sizes="(max-width: 845px) 100vw, 845px" /&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Now you can log in to the server using the following methods : &lt;ul&gt; &lt;li&gt;Credentials: Log in to the given server with the given credentials (basic auth).&lt;/li&gt; &lt;li&gt;Token: Log in to the given server with the given credentials (token).&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 60px;"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM.png"&gt;&lt;img class=" alignnone wp-image-540807 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-1024x171.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM.png" alt="OpenShift login options" width="748" height="125" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM.png 1482w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-300x50.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-768x129.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/11/Screenshot-2018-11-26-at-1.22.06-AM-1024x171.png 1024w" sizes="(max-width: 748px) 100vw, 748px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p style="padding-left: 30px;"&gt;7. OpenShift Application Explorer will display the OpenShift cluster in the Tree View.&lt;/p&gt; &lt;p style="padding-left: 30px;"&gt;8. Now you can perform the necessary operations in the connected cluster from the extension directly without looking back and forth to the command line.&lt;/p&gt; &lt;h3&gt;Working with OpenShift&lt;/h3&gt; &lt;p&gt;Once the extension is connected to the OpenShift clusters, you can perform operations in OpenShift and build/deploy applications. Note:  &lt;em&gt;This extension currently supports a local OpenShift cluster running using &lt;a href="https://github.com/minishift/minishift/releases" target="_blank" rel="noopener"&gt;minishift&lt;/a&gt; or &lt;a href="https://developers.redhat.com/products/cdk/download/" target="_blank" rel="noopener"&gt;Red Hat Container Development Kit&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &lt;h4&gt;Actions available inside an OpenShift cluster&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;OpenShift: List catalog components&lt;/code&gt; – Lists all available component types from OpenShift&amp;#8217;s Image Builder.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: List catalog services&lt;/code&gt; – Lists all available services, for example, MySQL.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: New Project&lt;/code&gt; – Creates a new project inside the cluster.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: About&lt;/code&gt; – Provides information about the OpenShift tools.&lt;/li&gt; &lt;li&gt;&lt;code&gt;OpenShift: Log out&lt;/code&gt; – Logs out of the current OpenShift cluster.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Actions available for a project&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Project -&amp;#62; New Application&lt;/code&gt; – Creates a new application inside the selected project.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Project -&amp;#62; Delete&lt;/code&gt; – Deletes an existing project.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Actions available for an application inside a project&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; New Component&lt;/code&gt; – Creates a new component inside the selected application. &lt;ul&gt; &lt;li&gt;git – Use a git repository as the source file for the component.&lt;/li&gt; &lt;li&gt;local – Use a local directory as a source file for the component.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; New Service&lt;/code&gt; – Performs service catalog operations.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; Describe&lt;/code&gt; – Describes the given application in a terminal window.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Application -&amp;#62; Delete&lt;/code&gt; – Deletes an existing application.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Actions available for a component in an application&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Create URL&lt;/code&gt; – Exposes a component to the outside world. The URLs that are generated using this command can be used to access the deployed components from outside the cluster.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Create Storage&lt;/code&gt; – Creates storage and mounts to a component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Show Log&lt;/code&gt; – Retrieves the log for the given component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Follow Log&lt;/code&gt; – Follows logs for the given component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Open in Browser&lt;/code&gt; – Opens the exposed URL in a browser.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Push&lt;/code&gt; – Pushes source code to a component.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Watch&lt;/code&gt; – Watches for changes and updates component upon change.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Describe&lt;/code&gt; – Describes the given component in a terminal window.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Component -&amp;#62; Delete&lt;/code&gt; – Deletes an existing component.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Contributions and Feedback&lt;/h2&gt; &lt;p&gt;This is an open source project and we welcome contributions and suggestions. Follow these &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/blob/master/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; guidelines for more details.&lt;/p&gt; &lt;p&gt;We are excited for you to give &lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector"&gt;OpenShift Connector&lt;/a&gt; a try! In addition, any feedback to further improve the developer experience using OpenShift on Visual Studio Code is welcome.&lt;/p&gt; &lt;p&gt;Please reach out to us if you have any questions, encounter any issues, or have feature requests.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Have thoughts on how we can make the extension better? Simply &lt;a href="https://github.com/redhat-developer/vscode-openshift-tools/issues"&gt;open a new issue&lt;/a&gt;!&lt;/li&gt; &lt;li&gt;For more discussions, chat with us on &lt;a href="https://chat.openshift.io/developers/channels/adapters"&gt;Mattermost&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Happy Collaborating,&lt;br /&gt; Red Hat Developer Tools Team&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#38;linkname=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F11%2F28%2Fannouncing-red-hat-openshift-extension-for-visual-studio-code-public-preview%2F&amp;#038;title=Announcing%20the%20Red%20Hat%20OpenShift%20extension%20for%20Visual%20Studio%20Code%3A%20Public%20Preview" data-a2a-url="https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/" data-a2a-title="Announcing the Red Hat OpenShift extension for Visual Studio Code: Public Preview"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/"&gt;Announcing the Red Hat OpenShift extension for Visual Studio Code: Public Preview&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-rjfT8pvOUY" height="1" width="1" alt=""/&gt;</content><summary>We are extremely pleased to announce that the preview release of the Red Hat OpenShift extension for Visual Studio Code is now available. You can download the OpenShift Connector extension from the marketplace or install it directly from the extension gallery in Visual Studio Code. This article provides describes the features and benefits of the extension and provides installation details. It also...</summary><dc:creator>Mohit Suman</dc:creator><dc:date>2018-11-28T14:00:02Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/11/28/announcing-red-hat-openshift-extension-for-visual-studio-code-public-preview/</feedburner:origLink></entry></feed>
